			
			Kubernetes Architecture ::::
			
			Kubernetes Components ::::
			
			Kubernetes Service ::::
			
			Kubernetes 
					
					
			Kubernetes Master :
			
				Kubernetes_Cluser1
					Kubernetes WorkerNode1
					Kubernetes WorkerNode2
					Kubernetes WorkerNode3
					
				Kubernetes_Cluser2
					Kubernetes WorkerNode1
					Kubernetes WorkerNode2
					Kubernetes WorkerNode3
										
			Installation and Configuration of Kubernetes :
			
				Open-Source Kubernetes 
				
					kubeadm ==>> 
					
				Managed Services :::
				
					AWS 		EKS 
					Azure 		AKS 
					GCP 		GKS 
			
			
###############
Day 15
16th June 2023
###############		


		Installation and config. of Kubernetes.
		
			kubectl		- cli  
			
			pods		- Smallest unit to task schedul	
			
			
		Using Kubeadm - we can install and config kubernetes master and cluster.	
			
			
		Pre-Requisites :::
		
			1. 2 or more CPUs
			2. 3GB or more RAM
			3. Full network access among the nodes.
			4. Enable SWAPOFF 
			5. Disable Selinux
			
		
		Kubernetes Concepts ::::
		
			kubectl 			- Command Line Utility.
			pods 
			Controller Objects 
				Replication Controller 
				Replicasets
				Deployment Controller 
				Daemonset
			Services
				NodePort 
				ClusterIP
				Load Balancer
			Persistant Volumes
			Persistant Volume Claim
			HELM - Package Manager 
			
			
		Pod -- created ===> one copy of pod, running in one WN.
			
				Replication Controller 
				Replicasets			
			
					- Are used to create replicas of Pods. 
					- Scale up / down 
					
					Labels & Selectors == are used to identify the template.
					
					
		Both Replication Controller and Replicasets 
					- Both RC / RS are used to run a specific no. of pods in the cluster.
					- Are used to create replicas of Pods. 
					- Scale up / down 
					- RC uses Equality based operator 	app=nginx-app => envi=dev
					- RS used set based operator 		{envi:[dev,qa,uat]}
					- Scale Up / Down
					- kubectl scale rc nginx-rc --replicas=5
					- kubectl scale rs nginx-rs --replicas=5
					
		
					
			
			
		Daemonset	:::

					- Is used to run a copy of pod in all the available/set of workernodes
					- Automatically create the pod in all the new nodes.
					
				wn1,2,3,4,5
				
				Monitoring tool -> 
					
		ConfigMaps 	--> are used to send some non-sensitive data to pod 
		
		Secrets	 	--> are used to send sensitive data to pod  
		
	
			
###############
Day 16
19th June 2023
###############		
		
		Deployment Controller 
		
			- replicasets 
			- Scale up/down 
			- Rolling Update 
			- Roleback/Undo the Changes 
		
		
		*.war -==> image --> mywebapp:v1.1 --> publish --> deploy to kubernetes 
		*.war -==> image --> mywebapp:v1.2 --> publish --> deploy to kubernetes 
		*.war -==> image --> mywebapp:v1.3 --> publish --> deploy to kubernetes 
		
		
		Describe Command ======> is used to get the list of events of any kubernetes object.
		
		Deployment StrategyType:           RollingUpdate
		
		nginx-deploy  upgrade to --> 1.9.1
		
nginx-deploy-5878ddd45b-5ts9s   1/1     Running   0          119s			--	nginx:1.7.9			upgrade to --> 1.9.1
nginx-deploy-5878ddd45b-lntml   1/1     Running   0          119s			--	nginx:1.7.9			upgrade to --> 1.9.1
nginx-deploy-5878ddd45b-tncpk   1/1     Running   0          119s			--	nginx:1.7.9			upgrade to --> 1.9.1

		
nginx-deploy-5878ddd45b-5ts9s   1/1     Running   0          119s			--	nginx:1.7.9			upgrade to --> 1.9.1
nginx-deploy-5878ddd45b-lntml   1/1     Running   0          119s			--	nginx:1.7.9			upgrade to --> 1.9.1

	kubectl create -f mypod.yaml
	kubectl apply -f mypod.yaml
	
			Services :::::
			
				NodePort 
				ClusterIP
				Load Balancer
	
	

		Service --> User_Login_Service ::::	==> 3-tier Application 
		
			FrontEnd(UI)				Container1(Pod1)
			Application_Logic			Container2(Pod2)
			BackEnd(DBase)				Container3(Pod3)		cluserIP Service 
		
		
		
		Workflow ::
		
		FrontEnd(UI) - Container1(Pod1)
		
		Create Service to this Pod --> NodePort Service (31000)
		
			Label ans selector 
		
		Use External_IP:<node_port> ==> access the application 
		
		
		
		192.168.10.1		==> External_IP Address ---> Host Machine 
		
		Host Name Mapping thru internet access.
		
		pod1	-- ips		Service (Created with a valid Name. --_ Port --_ IP_Address)	- selector-(lbl1)-(lbl2)
		pod2	-- ips(lbl1)
		pod2	-- ips(lbl2)
		
		
		Label and Selectors 
		
		
		Volumes ::::
		
			ConfigMaps
			Secrets 
			
			Hostpath				---> compare with docker volume (dir)
			empty dir 				---> Default volume
			
			PV 		Persistant Volume 				use to handle huge volume of data- 1TB of Volume
			PVC 	Persistant Volume Claim 
		
		
		apply		------->>>>> pod 
		
		/update/apply 
		
		
	
			
###############
Day 17
20th June 2023
###############	 
		
		HELM - Package Manager ::::
		
		Package Manager :::: -- like yum, apt, rpm, dnf 
		
		Monitoring tool ==> K8s Cluster --> worknodes
		
		HELM
		
		Use HELM Package Manager to install a package for K8s Cluster.
		
		Kubernetes Dashboards 
		
		EKS/AKS/GKS ==> Dashboards 
		kubectl -- CLU ==> GUI --> 
		
		https://helm.sh/docs/helm/helm_package/
		
	
		
		
					
		
		
		
		
		
